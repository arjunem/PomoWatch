using System.ComponentModel.DataAnnotations;

namespace PomodoroAPI.Models;

/// <summary>
/// Represents a Pomodoro session entity in the database
/// Tracks work and break sessions with timing and status information
/// </summary>
public class Session
{
    /// <summary>
    /// Unique identifier for the session
    /// Auto-generated by the database
    /// </summary>
    public int Id { get; set; }
    
    /// <summary>
    /// Type of session: "work" for focused work time, "break" for rest periods
    /// </summary>
    [Required]
    [StringLength(20)]
    public string Type { get; set; } = string.Empty; // "work" or "break"
    
    /// <summary>
    /// When the session was started
    /// Required field, set when session begins
    /// </summary>
    [Required]
    public DateTime StartTime { get; set; }
    
    /// <summary>
    /// When the session ended (null for running sessions)
    /// Set when session is completed, cancelled, or paused
    /// </summary>
    public DateTime? EndTime { get; set; } // Nullable for running sessions
    
    /// <summary>
    /// Current status of the session
    /// Values: "running", "completed", "cancelled", "paused"
    /// </summary>
    [Required]
    [StringLength(20)]
    public string Status { get; set; } = string.Empty; // "running", "completed", "cancelled", "paused"
    
    /// <summary>
    /// Planned duration of the session in minutes
    /// Default is 25 minutes for work sessions
    /// </summary>
    public int DurationMinutes { get; set; } = 25; // Default 25 minutes for work sessions
    
    /// <summary>
    /// Timestamp when the session record was created
    /// Automatically set to current UTC time
    /// </summary>
    public DateTime CreatedAt { get; set; } = DateTime.UtcNow;
    
    /// <summary>
    /// Timestamp when the session record was last updated
    /// Automatically updated on status changes
    /// </summary>
    public DateTime? UpdatedAt { get; set; }
}

